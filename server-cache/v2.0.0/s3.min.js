AWS.S3=AWS.Service.defineService("s3");AWS.util.update(AWS.S3.prototype,{initialize:function e(t){AWS.Service.prototype.initialize.call(this,t);this.setEndpoint(this.config.endpoint,t)},setupRequestListeners:function t(e){e.addListener("build",this.addContentType);e.addListener("build",this.populateURI);e.addListener("build",this.computeContentMd5);e.addListener("build",this.computeSha256);e.addListener("build",this.computeSseCustomerKeyMd5);e.removeListener("validate",AWS.EventListeners.Core.VALIDATE_REGION);e.addListener("extractError",this.extractError);e.addListener("extractData",this.extractData);e.addListener("beforePresign",this.prepareSignedUrl)},populateURI:function r(e){var t=e.httpRequest;var r=e.params.Bucket;if(r){if(!e.service.pathStyleBucketName(r)){t.endpoint.hostname=r+"."+t.endpoint.hostname;var i=t.endpoint.port;if(i!==80&&i!==443){t.endpoint.host=t.endpoint.hostname+":"+t.endpoint.port}else{t.endpoint.host=t.endpoint.hostname}t.virtualHostedBucket=r;t.path=t.path.replace(new RegExp("/"+r),"");if(t.path[0]!=="/"){t.path="/"+t.path}}}},addContentType:function i(e){var t=e.httpRequest;if(!t.headers["Content-Type"]){t.headers["Content-Type"]="application/octet-stream"}var r=t.headers["Content-Type"];if(AWS.util.isBrowser()){if(typeof t.body==="string"&&!r.match(/;\s*charset=/)){var i="; charset=UTF-8";t.headers["Content-Type"]+=i}else{var n=function(e,t,r){return t+r.toUpperCase()};t.headers["Content-Type"]=r.replace(/(;\s*charset=)(.+)$/,n)}}},computableChecksumOperations:{putBucketCors:true,putBucketLifecycle:true,putBucketTagging:true,deleteObjects:true},willComputeChecksums:function n(e){if(this.computableChecksumOperations[e.operation])return true;if(!this.config.computeChecksums)return false;if(!AWS.util.Buffer.isBuffer(e.httpRequest.body)&&typeof e.httpRequest.body!=="string"){return false}var t=e.service.api.operations[e.operation].input.members;if(e.service.getSignerClass(e)===AWS.Signers.V4){if(t.ContentMD5&&!t.ContentMD5.required)return false}if(t.ContentMD5&&!e.params.ContentMD5)return true},computeContentMd5:function s(e){if(e.service.willComputeChecksums(e)){var t=AWS.util.crypto.md5(e.httpRequest.body,"base64");e.httpRequest.headers["Content-MD5"]=t}},computeSha256:function o(e){if(e.service.getSignerClass(e)===AWS.Signers.V4){e.httpRequest.headers["X-Amz-Content-Sha256"]=AWS.util.crypto.sha256(e.httpRequest.body||"","hex")}},computeSseCustomerKeyMd5:function a(e){var t=["x-amz-server-side-encryption-customer-key","x-amz-copy-source-server-side-encryption-customer-key"];AWS.util.arrayEach(t,function(t){if(e.httpRequest.headers[t]){var r=e.httpRequest.headers[t];var i=t+"-MD5";e.httpRequest.headers[t]=AWS.util.base64.encode(r);if(!e.httpRequest.headers[i]){var n=AWS.util.crypto.md5(r,"base64");e.httpRequest.headers[i]=AWS.util.base64.encode(n)}}})},pathStyleBucketName:function u(e){if(this.config.s3ForcePathStyle)return true;if(this.dnsCompatibleBucketName(e)){return this.config.sslEnabled&&e.match(/\./)?true:false}else{return true}},dnsCompatibleBucketName:function p(e){var t=e;var r=new RegExp(/^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/);var i=new RegExp(/(\d+\.){3}\d+/);var n=new RegExp(/\.\./);return t.match(r)&&!t.match(i)&&!t.match(n)?true:false},escapePathParam:function c(e){return AWS.util.uriEscapePath(String(e))},successfulResponse:function d(e){var t=e.request;var r=e.httpResponse;if(t.operation==="completeMultipartUpload"&&r.body.toString().match("<Error>"))return false;else return r.statusCode<300},retryableError:function h(e,t){if(t.operation==="completeMultipartUpload"&&e.statusCode===200){return true}else if(e&&e.code==="RequestTimeout"){return true}else{var r=AWS.Service.prototype.retryableError;return r.call(this,e,t)}},extractData:function l(e){var t=e.request;if(t.operation==="getBucketLocation"){var r=e.httpResponse.body.toString().match(/>(.+)<\/Location/);if(r){delete e.data["_"];e.data.LocationConstraint=r[1]}}},extractError:function f(e){var t={304:"NotModified",403:"Forbidden",400:"BadRequest",404:"NotFound"};var r=e.httpResponse.statusCode;var i=e.httpResponse.body;if(t[r]&&i.length===0){e.error=AWS.util.error(new Error,{code:t[e.httpResponse.statusCode],message:null})}else{var n=(new AWS.XML.Parser).parse(i.toString());e.error=AWS.util.error(new Error,{code:n.Code||r,message:n.Message||null})}},setEndpoint:function m(e){if(e){this.endpoint=new AWS.Endpoint(e,this.config)}else if(this.config.region&&this.config.region!=="us-east-1"){var t="-";if(this.isRegionV4())t=".";var r="s3"+t+this.config.region+this.endpointSuffix();this.endpoint=new AWS.Endpoint(r)}else{this.endpoint=new AWS.Endpoint(this.api.globalEndpoint,this.config)}},getSignedUrl:function v(e,t,r){t=AWS.util.copy(t||{});var i=t.Expires||900;delete t.Expires;var n=this.makeRequest(e,t);return n.presign(i,r)},prepareSignedUrl:function S(e){e.removeListener("build",e.service.addContentType);if(!e.params.Body){e.removeListener("build",e.service.computeContentMd5);e.removeListener("build",e.service.computeSha256)}},createBucket:function g(e,t){if(!e)e={};var r=this.endpoint.hostname;if(r!==this.api.globalEndpoint&&!e.CreateBucketConfiguration){e.CreateBucketConfiguration={LocationConstraint:this.config.region}}return this.makeRequest("createBucket",e,t)}});