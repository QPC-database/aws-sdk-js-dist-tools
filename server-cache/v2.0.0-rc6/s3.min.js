AWS.S3=AWS.Service.defineService("s3",["2006-03-01"],{initialize:function e(t){AWS.Service.prototype.initialize.call(this,t);this.setEndpoint((t||{}).endpoint,t)},setupRequestListeners:function t(e){e.addListener("build",this.addContentType);e.addListener("build",this.populateURI);e.addListener("build",this.computeContentMd5);e.addListener("build",this.computeSha256);e.removeListener("validate",AWS.EventListeners.Core.VALIDATE_REGION);e.addListener("extractError",this.extractError);e.addListener("extractData",this.extractData)},populateURI:function r(e){var t=e.httpRequest;var r=e.params.Bucket;if(r){if(!e.service.pathStyleBucketName(r)){t.endpoint.host=t.endpoint.hostname=r+"."+t.endpoint.hostname;t.virtualHostedBucket=r;t.path=t.path.replace(new RegExp("^/"+r),"");if(t.path[0]!=="/"){t.path="/"+t.path}}}},addContentType:function n(e){var t=e.httpRequest;if(!t.headers["Content-Type"]){t.headers["Content-Type"]="application/octet-stream"}if(AWS.util.isBrowser()&&navigator.userAgent.match(/Firefox/)){if(!t.headers["Content-Type"].match(/;/)){var r="; charset=UTF-8";t.headers["Content-Type"]+=r}}},computableChecksumOperations:{putBucketCors:true,putBucketLifecycle:true,putBucketTagging:true,deleteObjects:true},willComputeChecksums:function i(e){if(this.computableChecksumOperations[e.operation])return true;if(!this.config.computeChecksums)return false;if(!Buffer.isBuffer(e.httpRequest.body)&&typeof e.httpRequest.body!=="string"){return false}var t=e.service.api.operations[e.operation].input.members;if(e.service.getSignerClass(e)===AWS.Signers.V4){if(t.ContentMD5&&!t.ContentMD5.required)return false}if(t.ContentMD5&&!e.params.ContentMD5)return true},computeContentMd5:function a(e){if(e.service.willComputeChecksums(e)){var t=AWS.util.crypto.md5(e.httpRequest.body,"base64");e.httpRequest.headers["Content-MD5"]=t}},computeSha256:function s(e){if(e.service.getSignerClass(e)===AWS.Signers.V4){e.httpRequest.headers["X-Amz-Content-Sha256"]=AWS.util.crypto.sha256(e.httpRequest.body||"","hex")}},pathStyleBucketName:function o(e){if(this.config.s3ForcePathStyle)return true;if(this.dnsCompatibleBucketName(e)){return this.config.sslEnabled&&e.match(/\./)?true:false}else{return true}},dnsCompatibleBucketName:function u(e){var t=e;var r=new RegExp(/^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/);var n=new RegExp(/(\d+\.){3}\d+/);var i=new RegExp(/\.\./);return t.match(r)&&!t.match(n)&&!t.match(i)?true:false},escapePathParam:function p(e){return AWS.util.uriEscapePath(String(e))},successfulResponse:function c(e){var t=e.request;var r=e.httpResponse;if(t.operation==="completeMultipartUpload"&&r.body.toString().match("<Error>"))return false;else return r.statusCode<300},retryableError:function h(e,t){if(t.operation=="completeMultipartUpload"&&e.statusCode===200){return true}else{var r=AWS.Service.prototype.retryableError;return r.call(this,e,t)}},extractData:function d(e){var t=e.request;if(t.operation==="getBucketLocation"){var r=e.httpResponse.body.toString().match(/>(.+)<\/Location/);if(r){delete e.data["_"];e.data.LocationConstraint=r[1]}}},extractError:function l(e){var t={304:"NotModified",403:"Forbidden",400:"BadRequest",404:"NotFound"};var r=e.httpResponse.statusCode;var n=e.httpResponse.body;if(t[r]&&n.length===0){e.error=AWS.util.error(new Error,{code:t[e.httpResponse.statusCode],message:null})}else{var i=new AWS.XML.Parser({}).parse(n.toString());e.error=AWS.util.error(new Error,{code:i.Code||r,message:i.Message||null})}},setEndpoint:function f(e){if(e){this.endpoint=new AWS.Endpoint(e,this.config)}else if(this.config.region&&this.config.region!=="us-east-1"){var t="-";if(this.isRegionV4())t=".";var r="s3"+t+this.config.region+this.endpointSuffix();this.endpoint=new AWS.Endpoint(r)}else{this.endpoint=new AWS.Endpoint(this.api.globalEndpoint,this.config)}},getSignedUrl:function m(e,t,r){var n=t.Expires||900;delete t.Expires;var i=require("url");var a=["validate","build","sign"];var s=this.makeRequest(e,t);var o="presigned-expires";function u(){delete s.httpRequest.headers["User-Agent"];delete s.httpRequest.headers["X-Amz-User-Agent"];s.httpRequest.headers[o]=parseInt(AWS.util.date.unixTimestamp()+n,10).toString()}function p(){var e={};AWS.util.each(s.httpRequest.headers,function(t,r){if(t===o)t="Expires";e[t]=r});delete s.httpRequest.headers[o];var t=e["Authorization"].split(":");delete e["Authorization"];delete e["Host"];e["AWSAccessKeyId"]=t[0].split(" ")[1];e["Signature"]=t[1];var r=s.httpRequest.endpoint;var n=i.parse(s.httpRequest.path);var a=AWS.util.queryParamsToString(e);r.pathname=n.pathname;r.search=!n.search?a:n.search+"&"+a}s.on("build",u);s.on("sign",p);s.removeListener("build",this.addContentType);if(!t.Body){s.removeListener("build",this.computeContentMd5)}if(r){s.emitEvents(a,new AWS.Response(s),function(e){if(e)r(e,null);else r(null,i.format(s.httpRequest.endpoint))})}else{AWS.util.arrayEach(a,function(e){s.emitEvent(e,[s])});return i.format(s.httpRequest.endpoint)}}});AWS.S3.prototype.createBucket=function g(e,t){if(!e)e={};var r=this.endpoint.hostname;if(r!=this.api.globalEndpoint&&!e.CreateBucketConfiguration){e.CreateBucketConfiguration={LocationConstraint:this.config.region}}return this.makeRequest("createBucket",e,t)};