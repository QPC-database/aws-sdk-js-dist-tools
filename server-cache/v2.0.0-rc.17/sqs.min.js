window.AWS.SQS=window.AWS.Service.defineService("sqs");window.AWS.util.update(window.AWS.SQS.prototype,{setupRequestListeners:function e(s){s.addListener("build",this.buildEndpoint);if(s.service.config.computeChecksums){if(s.operation==="sendMessage"){s.addListener("extractData",this.verifySendMessageChecksum)}else if(s.operation==="sendMessageBatch"){s.addListener("extractData",this.verifySendMessageBatchChecksum)}else if(s.operation==="receiveMessage"){s.addListener("extractData",this.verifyReceiveMessageChecksum)}}},verifySendMessageChecksum:function s(e){if(!e.data)return;var s=e.data.MD5OfMessageBody;var a=this.params.MessageBody;var i=this.service.calculateChecksum(a);if(i!==s){var t='Got "'+e.data.MD5OfMessageBody+'", expecting "'+i+'".';this.service.throwInvalidChecksumError(e,[e.data.MessageId],t)}},verifySendMessageBatchChecksum:function a(e){if(!e.data)return;var s=this.service;var a={};var i=[];var t=[];window.AWS.util.arrayEach(e.data.Successful,function(e){a[e.Id]=e});window.AWS.util.arrayEach(this.params.Entries,function(e){if(a[e.Id]){var r=a[e.Id].MD5OfMessageBody;var n=e.MessageBody;if(!s.isChecksumValid(r,n)){i.push(e.Id);t.push(a[e.Id].MessageId)}}});if(i.length>0){s.throwInvalidChecksumError(e,t,"Invalid messages: "+i.join(", "))}},verifyReceiveMessageChecksum:function i(e){if(!e.data)return;var s=this.service;var a=[];window.AWS.util.arrayEach(e.data.Messages,function(e){var i=e.MD5OfBody;var t=e.Body;if(!s.isChecksumValid(i,t)){a.push(e.MessageId)}});if(a.length>0){s.throwInvalidChecksumError(e,a,"Invalid messages: "+a.join(", "))}},throwInvalidChecksumError:function t(e,s,a){e.error=window.AWS.util.error(new Error,{retryable:true,code:"InvalidChecksum",messageIds:s,message:e.request.operation+" returned an invalid MD5 response. "+a})},isChecksumValid:function r(e,s){return this.calculateChecksum(s)===e},calculateChecksum:function n(e){return window.AWS.util.crypto.md5(e,"hex")},buildEndpoint:function d(e){var s=e.httpRequest.params.QueueUrl;if(s){e.httpRequest.endpoint=new window.AWS.Endpoint(s);var a=e.httpRequest.endpoint.host.match(/^sqs\.(.+?)\./);if(a)e.httpRequest.region=a[1]}}});